{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import React from 'react'\nimport styles from './avatar.module.css'\nconst SVG = () => (\n  <svg\n    xmlns='http://www.w3.org/2000/svg'\n    viewBox='0 0 20 20'\n    fill='currentColor'\n  >\n    <path\n      fillRule='evenodd'\n      d='M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z'\n      clipRule='evenodd'\n    />\n  </svg>\n)\n\nfunction getRandomColor() {\n  const options = '0123456789ABCDEF'\n  let color = '#'\n  for (let i = 0; i < 6; i++) {\n    color += options[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n\ninterface Iavatar {\n  style?: React.CSSProperties\n  className?: string\n  alt?: string\n  src?: string\n  name?: string\n  size?: 'large' | 'small' | 'default'\n  shape?: 'circle' | 'square'\n  icon?: boolean\n  randomColor?: boolean\n  children?: React.ReactNode\n}\n\nexport const Avatar = (props: Iavatar) => {\n  const {\n    className,\n    alt,\n    src,\n    icon,\n    name = '',\n    size,\n    shape = 'circle',\n    randomColor,\n    ...resetProps\n  } = props\n\n  let children = props.children\n\n  const title =\n    name &&\n    name\n      .split(' ')\n      .map((n: string) => n[0].toUpperCase())\n      .join('')\n\n  const cn = [\n    styles.avatar,\n    className,\n    size ? (size === 'large' ? styles.large : styles.small) : null,\n    shape === 'circle' ? styles.circle : styles.square,\n    src ? `styles.avatar-img` : null\n  ]\n    .filter(Boolean)\n    .join(' ')\n    .trim()\n\n  if (src) {\n    children = <img src={src} alt={alt} />\n  } else if (icon) {\n    children = <SVG />\n  } else {\n    children = title\n  }\n\n  return (\n    <span\n      style={{\n        backgroundColor: randomColor ? getRandomColor() : undefined\n      }}\n      {...resetProps}\n      className={cn}\n    >\n      {children}\n    </span>\n  )\n}\n"],"names":["SVG","React","xmlns","viewBox","fill","fillRule","d","clipRule","getRandomColor","options","color","i","Math","floor","random","Avatar","props","className","alt","src","icon","name","size","shape","randomColor","resetProps","children","title","split","map","n","toUpperCase","join","cn","styles","avatar","large","small","circle","square","filter","Boolean","trim","style","backgroundColor","undefined"],"mappings":";;;;AAEA,MAAMA,GAAG,GAAG,MACVC,mBAAA,MAAA;AACEC,EAAAA,KAAK,EAAC;AACNC,EAAAA,OAAO,EAAC;AACRC,EAAAA,IAAI,EAAC;CAHP,EAKEH,mBAAA,OAAA;AACEI,EAAAA,QAAQ,EAAC;AACTC,EAAAA,CAAC,EAAC;AACFC,EAAAA,QAAQ,EAAC;CAHX,CALF,CADF;;AAcA,SAASC,cAAT;AACE,QAAMC,OAAO,GAAG,kBAAhB;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,IAAAA,KAAK,IAAID,OAAO,CAACG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,SAAOJ,KAAP;AACD;;AAeD,MAAaK,MAAM,GAAIC,KAAD;AACpB,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,GAFI;AAGJC,IAAAA,GAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,IAAI,GAAG,EALH;AAMJC,IAAAA,IANI;AAOJC,IAAAA,KAAK,GAAG,QAPJ;AAQJC,IAAAA,WARI;AASJ,OAAGC;AATC,MAUFT,KAVJ;AAYA,MAAIU,QAAQ,GAAGV,KAAK,CAACU,QAArB;AAEA,QAAMC,KAAK,GACTN,IAAI,IACJA,IAAI,CACDO,KADH,CACS,GADT,EAEGC,GAFH,CAEQC,CAAD,IAAeA,CAAC,CAAC,CAAD,CAAD,CAAKC,WAAL,EAFtB,EAGGC,IAHH,CAGQ,EAHR,CAFF;AAOA,QAAMC,EAAE,GAAG,CACTC,MAAM,CAACC,MADE,EAETlB,SAFS,EAGTK,IAAI,GAAIA,IAAI,KAAK,OAAT,GAAmBY,MAAM,CAACE,KAA1B,GAAkCF,MAAM,CAACG,KAA7C,GAAsD,IAHjD,EAITd,KAAK,KAAK,QAAV,GAAqBW,MAAM,CAACI,MAA5B,GAAqCJ,MAAM,CAACK,MAJnC,EAKTpB,GAAG,sBAAA,GAAyB,IALnB,EAORqB,MAPQ,CAODC,OAPC,EAQRT,IARQ,CAQH,GARG,EASRU,IATQ,EAAX;;AAWA,MAAIvB,GAAJ,EAAS;AACPO,IAAAA,QAAQ,GAAGzB,mBAAA,MAAA;AAAKkB,MAAAA,GAAG,EAAEA;AAAKD,MAAAA,GAAG,EAAEA;KAApB,CAAX;AACD,GAFD,MAEO,IAAIE,IAAJ,EAAU;AACfM,IAAAA,QAAQ,GAAGzB,mBAAA,CAACD,GAAD,MAAA,CAAX;AACD,GAFM,MAEA;AACL0B,IAAAA,QAAQ,GAAGC,KAAX;AACD;;AAED,SACE1B,mBAAA,OAAA;AACE0C,IAAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAEpB,WAAW,GAAGhB,cAAc,EAAjB,GAAsBqC;AAD7C;KAGHpB;AACJR,IAAAA,SAAS,EAAEgB;IALb,EAOGP,QAPH,CADF;AAWD,CApDM;;;;"}